from Crypto.Util.number import getPrime, inverse, bytes_to_long, long_to_bytes
from Crypto.Random import random

def generate_keys(bits=2048):
    p = getPrime(bits)
    g = random.randint(2, p-1)
    x = random.randint(2, p-2)
    h = pow(g, x, p)
    return (p, g, h), x

def elgamal_encrypt(public_key, message):
    p, g, h = public_key
    k = random.randint(2, p-2)
    c1 = pow(g, k, p)
    m = bytes_to_long(message)
    c2 = (m * pow(h, k, p)) % p
    return c1, c2

def elgamal_decrypt(private_key, p, c1, c2):
    s = pow(c1, private_key, p)
    s_inv = inverse(s, p)
    m = (c2 * s_inv) % p
    return long_to_bytes(m)

public_key, private_key = generate_keys(bits=2048)
message = b"Confidential Data"

c1, c2 = elgamal_encrypt(public_key, message)
decrypted = elgamal_decrypt(private_key, public_key[0], c1, c2)

print("Plain text:", message.decode())
print("Ciphertext:", (c1, c2))
print("Decrypted text:", decrypted.decode())
print("Successful" if decrypted == message else "Unsuccessful")

'''Plain text: Confidential Data
Ciphertext: (5914132609268811963953840945344238530586814143622921617906578476777139913665821707109308557861261069226345076888288966292099660489646216347759456701556847589706166306119489338453706080643621291713391487522934997021559590566792026513932605913579702639651406054508888309296525462689431497212707131699848946253694768503599846167751023721707914057604586680367714130414942563131749180139329635348114126629021492479500314894903466346114527818581351619390575143812460939135513557229914494230801285059586446923373176725753917225319417743590654651528741959742889010877743453599933644487178908133910110663118509085596868255425, 22370993207412935483523463459848020325711637845203093237729019075344518084591631947887206132932811309046058104374093544113123817237298650286465213859839699430691222927278802349916677488492219087678948935400562247236477541196146224914068128235972777308208874527318985015410575466637112264232811768883342833359976262158311606444890253905491435414971279346938787533631453627048004029773758253363401581434425143813850032391681428276632235466201480966959562225007181931329621627601255351547071163654557105134129335743995223832222267822063878698578796331094925967357525619438544210845045148107978810934602256956142983791060)
Decrypted text: Confidential Data
Successful
'''